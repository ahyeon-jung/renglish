/* tslint:disable */
/* eslint-disable */
/**
 * Renglish API Swagger
 * Download: <a href=/api-docs-ahyeon-renglish-api/swagger-json target=\"_blank\">click here</a><br/><br/>github: <a href=\"https://github.com/ahyeon-jung/renglish\" target=\"_blank\">ahyeon-jung/renglish</a><br/>contact: ahyeon.aisha@gmail.com
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface User
 */
export interface User {
  /**
   * 아이디
   * @type {string}
   * @memberof User
   */
  id: string;
  /**
   * 생성일
   * @type {Date}
   * @memberof User
   */
  createdAt: Date;
  /**
   * 수정일
   * @type {Date}
   * @memberof User
   */
  updatedAt: Date;
  /**
   * 삭제일
   * @type {Date}
   * @memberof User
   */
  deletedAt: Date;
  /**
   * 소셜 계정 플랫폼
   * @type {string}
   * @memberof User
   */
  provider: string;
  /**
   * 이메일
   * @type {string}
   * @memberof User
   */
  email: string;
  /**
   * 닉네임
   * @type {string}
   * @memberof User
   */
  nickname: string;
}

/**
 * Check if a given object implements the User interface.
 */
export function instanceOfUser(value: object): value is User {
  if (!("id" in value) || value["id"] === undefined) return false;
  if (!("createdAt" in value) || value["createdAt"] === undefined) return false;
  if (!("updatedAt" in value) || value["updatedAt"] === undefined) return false;
  if (!("deletedAt" in value) || value["deletedAt"] === undefined) return false;
  if (!("provider" in value) || value["provider"] === undefined) return false;
  if (!("email" in value) || value["email"] === undefined) return false;
  if (!("nickname" in value) || value["nickname"] === undefined) return false;
  return true;
}

export function UserFromJSON(json: any): User {
  return UserFromJSONTyped(json, false);
}

export function UserFromJSONTyped(json: any, ignoreDiscriminator: boolean): User {
  if (json == null) {
    return json;
  }
  return {
    id: json["id"],
    createdAt: new Date(json["createdAt"]),
    updatedAt: new Date(json["updatedAt"]),
    deletedAt: new Date(json["deletedAt"]),
    provider: json["provider"],
    email: json["email"],
    nickname: json["nickname"],
  };
}

export function UserToJSON(json: any): User {
  return UserToJSONTyped(json, false);
}

export function UserToJSONTyped(value?: User | null, ignoreDiscriminator: boolean = false): any {
  if (value == null) {
    return value;
  }

  return {
    id: value["id"],
    createdAt: value["createdAt"].toISOString(),
    updatedAt: value["updatedAt"].toISOString(),
    deletedAt: value["deletedAt"].toISOString(),
    provider: value["provider"],
    email: value["email"],
    nickname: value["nickname"],
  };
}
