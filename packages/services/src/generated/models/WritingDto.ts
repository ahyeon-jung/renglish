/* tslint:disable */
/* eslint-disable */
/**
 * Renglish API Swagger
 * Download: <a href=/api-docs-ahyeon-renglish-api/swagger-json target=\"_blank\">click here</a><br/><br/>github: <a href=\"https://github.com/ahyeon-jung/renglish\" target=\"_blank\">ahyeon-jung/renglish</a><br/>contact: ahyeon.aisha@gmail.com
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Dialogue } from './Dialogue';
import {
    DialogueFromJSON,
    DialogueFromJSONTyped,
    DialogueToJSON,
    DialogueToJSONTyped,
} from './Dialogue';

/**
 * 
 * @export
 * @interface WritingDto
 */
export interface WritingDto {
    /**
     * 아이디
     * @type {string}
     * @memberof WritingDto
     */
    id: string;
    /**
     * 생성일
     * @type {Date}
     * @memberof WritingDto
     */
    createdAt: Date;
    /**
     * 수정일
     * @type {Date}
     * @memberof WritingDto
     */
    updatedAt: Date;
    /**
     * 
     * @type {string}
     * @memberof WritingDto
     */
    writing: string;
    /**
     * 
     * @type {Dialogue}
     * @memberof WritingDto
     */
    dialogue: Dialogue;
}

/**
 * Check if a given object implements the WritingDto interface.
 */
export function instanceOfWritingDto(value: object): value is WritingDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    if (!('writing' in value) || value['writing'] === undefined) return false;
    if (!('dialogue' in value) || value['dialogue'] === undefined) return false;
    return true;
}

export function WritingDtoFromJSON(json: any): WritingDto {
    return WritingDtoFromJSONTyped(json, false);
}

export function WritingDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): WritingDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
        'writing': json['writing'],
        'dialogue': DialogueFromJSON(json['dialogue']),
    };
}

export function WritingDtoToJSON(json: any): WritingDto {
    return WritingDtoToJSONTyped(json, false);
}

export function WritingDtoToJSONTyped(value?: WritingDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'createdAt': ((value['createdAt']).toISOString()),
        'updatedAt': ((value['updatedAt']).toISOString()),
        'writing': value['writing'],
        'dialogue': DialogueToJSON(value['dialogue']),
    };
}

