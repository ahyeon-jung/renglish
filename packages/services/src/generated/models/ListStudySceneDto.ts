/* tslint:disable */
/* eslint-disable */
/**
 * Renglish API Swagger
 * Download: <a href=/api-docs-ahyeon-renglish-api/swagger-json target=\"_blank\">click here</a><br/><br/>github: <a href=\"https://github.com/ahyeon-jung/renglish\" target=\"_blank\">ahyeon-jung/renglish</a><br/>contact: ahyeon.aisha@gmail.com
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { Movie } from "./Movie";
import { MovieFromJSON, MovieFromJSONTyped, MovieToJSON, MovieToJSONTyped } from "./Movie";
import type { Study } from "./Study";
import { StudyFromJSON, StudyFromJSONTyped, StudyToJSON, StudyToJSONTyped } from "./Study";
import type { Speaker } from "./Speaker";
import {
  SpeakerFromJSON,
  SpeakerFromJSONTyped,
  SpeakerToJSON,
  SpeakerToJSONTyped,
} from "./Speaker";

/**
 *
 * @export
 * @interface ListStudySceneDto
 */
export interface ListStudySceneDto {
  /**
   * 아이디
   * @type {string}
   * @memberof ListStudySceneDto
   */
  id: string;
  /**
   * 생성일
   * @type {Date}
   * @memberof ListStudySceneDto
   */
  createdAt: Date;
  /**
   * 수정일
   * @type {Date}
   * @memberof ListStudySceneDto
   */
  updatedAt: Date;
  /**
   * 삭제일
   * @type {Date}
   * @memberof ListStudySceneDto
   */
  deletedAt: Date;
  /**
   *
   * @type {string}
   * @memberof ListStudySceneDto
   */
  title: string;
  /**
   *
   * @type {string}
   * @memberof ListStudySceneDto
   */
  description: string;
  /**
   *
   * @type {string}
   * @memberof ListStudySceneDto
   */
  audioUrl: string;
  /**
   *
   * @type {Movie}
   * @memberof ListStudySceneDto
   */
  movie: Movie;
  /**
   *
   * @type {Study}
   * @memberof ListStudySceneDto
   */
  study: Study;
  /**
   *
   * @type {Array<Speaker>}
   * @memberof ListStudySceneDto
   */
  speakers: Array<Speaker>;
}

/**
 * Check if a given object implements the ListStudySceneDto interface.
 */
export function instanceOfListStudySceneDto(value: object): value is ListStudySceneDto {
  if (!("id" in value) || value["id"] === undefined) return false;
  if (!("createdAt" in value) || value["createdAt"] === undefined) return false;
  if (!("updatedAt" in value) || value["updatedAt"] === undefined) return false;
  if (!("deletedAt" in value) || value["deletedAt"] === undefined) return false;
  if (!("title" in value) || value["title"] === undefined) return false;
  if (!("description" in value) || value["description"] === undefined) return false;
  if (!("audioUrl" in value) || value["audioUrl"] === undefined) return false;
  if (!("movie" in value) || value["movie"] === undefined) return false;
  if (!("study" in value) || value["study"] === undefined) return false;
  if (!("speakers" in value) || value["speakers"] === undefined) return false;
  return true;
}

export function ListStudySceneDtoFromJSON(json: any): ListStudySceneDto {
  return ListStudySceneDtoFromJSONTyped(json, false);
}

export function ListStudySceneDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ListStudySceneDto {
  if (json == null) {
    return json;
  }
  return {
    id: json["id"],
    createdAt: new Date(json["createdAt"]),
    updatedAt: new Date(json["updatedAt"]),
    deletedAt: new Date(json["deletedAt"]),
    title: json["title"],
    description: json["description"],
    audioUrl: json["audioUrl"],
    movie: MovieFromJSON(json["movie"]),
    study: StudyFromJSON(json["study"]),
    speakers: (json["speakers"] as Array<any>).map(SpeakerFromJSON),
  };
}

export function ListStudySceneDtoToJSON(json: any): ListStudySceneDto {
  return ListStudySceneDtoToJSONTyped(json, false);
}

export function ListStudySceneDtoToJSONTyped(
  value?: ListStudySceneDto | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    id: value["id"],
    createdAt: value["createdAt"].toISOString(),
    updatedAt: value["updatedAt"].toISOString(),
    deletedAt: value["deletedAt"].toISOString(),
    title: value["title"],
    description: value["description"],
    audioUrl: value["audioUrl"],
    movie: MovieToJSON(value["movie"]),
    study: StudyToJSON(value["study"]),
    speakers: (value["speakers"] as Array<any>).map(SpeakerToJSON),
  };
}
