/* tslint:disable */
/* eslint-disable */
/**
 * Renglish API Swagger
 * Download: <a href=/api-docs-ahyeon-renglish-api/swagger-json target=\"_blank\">click here</a><br/><br/>github: <a href=\"https://github.com/ahyeon-jung/renglish\" target=\"_blank\">ahyeon-jung/renglish</a><br/>contact: ahyeon.aisha@gmail.com
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { Scene } from "./Scene";
import { SceneFromJSON, SceneFromJSONTyped, SceneToJSON, SceneToJSONTyped } from "./Scene";

/**
 *
 * @export
 * @interface Movie
 */
export interface Movie {
  /**
   * 아이디
   * @type {string}
   * @memberof Movie
   */
  id: string;
  /**
   * 생성일
   * @type {Date}
   * @memberof Movie
   */
  createdAt: Date;
  /**
   * 수정일
   * @type {Date}
   * @memberof Movie
   */
  updatedAt: Date;
  /**
   * 삭제일
   * @type {Date}
   * @memberof Movie
   */
  deletedAt: Date;
  /**
   *
   * @type {string}
   * @memberof Movie
   */
  title: string;
  /**
   *
   * @type {string}
   * @memberof Movie
   */
  category: string;
  /**
   *
   * @type {string}
   * @memberof Movie
   */
  imageUrl: string;
  /**
   *
   * @type {string}
   * @memberof Movie
   */
  description: string;
  /**
   *
   * @type {Array<Array<Scene>>}
   * @memberof Movie
   */
  scenes: Array<Array<Scene>>;
}

/**
 * Check if a given object implements the Movie interface.
 */
export function instanceOfMovie(value: object): value is Movie {
  if (!("id" in value) || value["id"] === undefined) return false;
  if (!("createdAt" in value) || value["createdAt"] === undefined) return false;
  if (!("updatedAt" in value) || value["updatedAt"] === undefined) return false;
  if (!("deletedAt" in value) || value["deletedAt"] === undefined) return false;
  if (!("title" in value) || value["title"] === undefined) return false;
  if (!("category" in value) || value["category"] === undefined) return false;
  if (!("imageUrl" in value) || value["imageUrl"] === undefined) return false;
  if (!("description" in value) || value["description"] === undefined) return false;
  if (!("scenes" in value) || value["scenes"] === undefined) return false;
  return true;
}

export function MovieFromJSON(json: any): Movie {
  return MovieFromJSONTyped(json, false);
}

export function MovieFromJSONTyped(json: any, ignoreDiscriminator: boolean): Movie {
  if (json == null) {
    return json;
  }
  return {
    id: json["id"],
    createdAt: new Date(json["createdAt"]),
    updatedAt: new Date(json["updatedAt"]),
    deletedAt: new Date(json["deletedAt"]),
    title: json["title"],
    category: json["category"],
    imageUrl: json["imageUrl"],
    description: json["description"],
    scenes: json["scenes"],
  };
}

export function MovieToJSON(json: any): Movie {
  return MovieToJSONTyped(json, false);
}

export function MovieToJSONTyped(value?: Movie | null, ignoreDiscriminator: boolean = false): any {
  if (value == null) {
    return value;
  }

  return {
    id: value["id"],
    createdAt: value["createdAt"].toISOString(),
    updatedAt: value["updatedAt"].toISOString(),
    deletedAt: value["deletedAt"].toISOString(),
    title: value["title"],
    category: value["category"],
    imageUrl: value["imageUrl"],
    description: value["description"],
    scenes: value["scenes"],
  };
}
