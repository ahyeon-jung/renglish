/**
 * Renglish API Swagger
 * Download: <a href=/api-docs-ahyeon-renglish-api/swagger-json target=\"_blank\">click here</a><br/><br/>github: <a href=\"https://github.com/ahyeon-jung/renglish\" target=\"_blank\">ahyeon-jung/renglish</a><br/>contact: ahyeon.aisha@gmail.com
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { CreateSceneDto, CreateStudyDto, ExtendedSceneDto, PaginationSceneResponseDto, UpdateSceneDto } from '../models/index';
export interface SceneControllerAddStudyRequest {
    sceneId: string;
    studyId: string;
}
export interface SceneControllerCreateRequest {
    sceneId: string;
    createStudyDto: CreateStudyDto;
}
export interface SceneControllerCreateSceneRequest {
    movieId: string;
    createSceneDto: CreateSceneDto;
}
export interface SceneControllerDeleteSceneRequest {
    sceneId: string;
}
export interface SceneControllerFindAllRequest {
    sceneId: string;
}
export interface SceneControllerFindAllSceneRequest {
    offset: number;
    limit: number;
    keyword?: string;
}
export interface SceneControllerFindSceneByIdRequest {
    sceneId: string;
}
export interface SceneControllerUpdateSceneRequest {
    sceneId: string;
    updateSceneDto: UpdateSceneDto;
}
/**
 *
 */
export declare class ScenesApi extends runtime.BaseAPI {
    /**
     * 장면에 기존의 스터디를 추가합니다.
     * 장면에 기존 스터디 추가  [ADMIN]
     */
    sceneControllerAddStudyRaw(requestParameters: SceneControllerAddStudyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * 장면에 기존의 스터디를 추가합니다.
     * 장면에 기존 스터디 추가  [ADMIN]
     */
    sceneControllerAddStudy(requestParameters: SceneControllerAddStudyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * 새로운 스터디를 생성합니다.
     * 새로운 스터디 생성하기  [ADMIN]
     */
    sceneControllerCreateRaw(requestParameters: SceneControllerCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * 새로운 스터디를 생성합니다.
     * 새로운 스터디 생성하기  [ADMIN]
     */
    sceneControllerCreate(requestParameters: SceneControllerCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * 새로운 장면 정보를 생성합니다.
     * 장면 정보 생성하기 [ADMIN]
     */
    sceneControllerCreateSceneRaw(requestParameters: SceneControllerCreateSceneRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * 새로운 장면 정보를 생성합니다.
     * 장면 정보 생성하기 [ADMIN]
     */
    sceneControllerCreateScene(requestParameters: SceneControllerCreateSceneRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * 장면 정보 및 연결된 발화자, 대사를 삭제합니다.
     * 장면 삭제하기 [ADMIN]
     */
    sceneControllerDeleteSceneRaw(requestParameters: SceneControllerDeleteSceneRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * 장면 정보 및 연결된 발화자, 대사를 삭제합니다.
     * 장면 삭제하기 [ADMIN]
     */
    sceneControllerDeleteScene(requestParameters: SceneControllerDeleteSceneRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * 장면 아이디로 모든 발화자를 가져옵니다.
     * 장면 발화자 가져오기
     */
    sceneControllerFindAllRaw(requestParameters: SceneControllerFindAllRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * 장면 아이디로 모든 발화자를 가져옵니다.
     * 장면 발화자 가져오기
     */
    sceneControllerFindAll(requestParameters: SceneControllerFindAllRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * 모든 장면면을 가져옵니다(audioUrl 제외).
     * 모든 장면 가져오기
     */
    sceneControllerFindAllSceneRaw(requestParameters: SceneControllerFindAllSceneRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PaginationSceneResponseDto>>;
    /**
     * 모든 장면면을 가져옵니다(audioUrl 제외).
     * 모든 장면 가져오기
     */
    sceneControllerFindAllScene(requestParameters: SceneControllerFindAllSceneRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PaginationSceneResponseDto>;
    /**
     * 장면 정보와 해당 장면의 대본을 가져옵니다.     <br/>로그인 유저가 참여자인 경우 audioUrl을 반환합니다.
     * 장면 및 대본 가져오기
     */
    sceneControllerFindSceneByIdRaw(requestParameters: SceneControllerFindSceneByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ExtendedSceneDto>>;
    /**
     * 장면 정보와 해당 장면의 대본을 가져옵니다.     <br/>로그인 유저가 참여자인 경우 audioUrl을 반환합니다.
     * 장면 및 대본 가져오기
     */
    sceneControllerFindSceneById(requestParameters: SceneControllerFindSceneByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ExtendedSceneDto>;
    /**
     * 장면 정보를 변경합니다.
     * 장면 정보 변경하기
     */
    sceneControllerUpdateSceneRaw(requestParameters: SceneControllerUpdateSceneRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * 장면 정보를 변경합니다.
     * 장면 정보 변경하기
     */
    sceneControllerUpdateScene(requestParameters: SceneControllerUpdateSceneRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
}
//# sourceMappingURL=ScenesApi.d.ts.map