/* tslint:disable */
/* eslint-disable */
/**
 * Renglish API Swagger
 * Download: <a href=/api-docs-ahyeon-renglish-api/swagger-json target=\"_blank\">click here</a><br/><br/>github: <a href=\"https://github.com/ahyeon-jung/renglish\" target=\"_blank\">ahyeon-jung/renglish</a><br/>contact: ahyeon.aisha@gmail.com
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
    UserToJSONTyped,
} from './User';
import type { ListStudySceneDto } from './ListStudySceneDto';
import {
    ListStudySceneDtoFromJSON,
    ListStudySceneDtoFromJSONTyped,
    ListStudySceneDtoToJSON,
    ListStudySceneDtoToJSONTyped,
} from './ListStudySceneDto';

/**
 * 
 * @export
 * @interface ListStudyDto
 */
export interface ListStudyDto {
    /**
     * 아이디
     * @type {string}
     * @memberof ListStudyDto
     */
    id: string;
    /**
     * 생성일
     * @type {Date}
     * @memberof ListStudyDto
     */
    createdAt: Date;
    /**
     * 수정일
     * @type {Date}
     * @memberof ListStudyDto
     */
    updatedAt: Date;
    /**
     * 스터디 진행 일자
     * @type {Date}
     * @memberof ListStudyDto
     */
    studiedAt: Date;
    /**
     * 스터디 제목
     * @type {string}
     * @memberof ListStudyDto
     */
    title: string;
    /**
     * 스터디 설명
     * @type {string}
     * @memberof ListStudyDto
     */
    description: string;
    /**
     * 스터디 신청자
     * @type {Array<User>}
     * @memberof ListStudyDto
     */
    applicants?: Array<User>;
    /**
     * 스터디 참여자
     * @type {Array<User>}
     * @memberof ListStudyDto
     */
    participants?: Array<User>;
    /**
     * 
     * @type {ListStudySceneDto}
     * @memberof ListStudyDto
     */
    scene: ListStudySceneDto;
    /**
     * 스터디 진행 상황
     * @type {boolean}
     * @memberof ListStudyDto
     */
    isCompleted: boolean;
}

/**
 * Check if a given object implements the ListStudyDto interface.
 */
export function instanceOfListStudyDto(value: object): value is ListStudyDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    if (!('studiedAt' in value) || value['studiedAt'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('scene' in value) || value['scene'] === undefined) return false;
    if (!('isCompleted' in value) || value['isCompleted'] === undefined) return false;
    return true;
}

export function ListStudyDtoFromJSON(json: any): ListStudyDto {
    return ListStudyDtoFromJSONTyped(json, false);
}

export function ListStudyDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListStudyDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
        'studiedAt': (new Date(json['studiedAt'])),
        'title': json['title'],
        'description': json['description'],
        'applicants': json['applicants'] == null ? undefined : ((json['applicants'] as Array<any>).map(UserFromJSON)),
        'participants': json['participants'] == null ? undefined : ((json['participants'] as Array<any>).map(UserFromJSON)),
        'scene': ListStudySceneDtoFromJSON(json['scene']),
        'isCompleted': json['isCompleted'],
    };
}

export function ListStudyDtoToJSON(json: any): ListStudyDto {
    return ListStudyDtoToJSONTyped(json, false);
}

export function ListStudyDtoToJSONTyped(value?: ListStudyDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'createdAt': ((value['createdAt']).toISOString()),
        'updatedAt': ((value['updatedAt']).toISOString()),
        'studiedAt': ((value['studiedAt']).toISOString()),
        'title': value['title'],
        'description': value['description'],
        'applicants': value['applicants'] == null ? undefined : ((value['applicants'] as Array<any>).map(UserToJSON)),
        'participants': value['participants'] == null ? undefined : ((value['participants'] as Array<any>).map(UserToJSON)),
        'scene': ListStudySceneDtoToJSON(value['scene']),
        'isCompleted': value['isCompleted'],
    };
}

