/* tslint:disable */
/* eslint-disable */
/**
 * Renglish API Swagger
 * Download: <a href=/api-docs-ahyeon-renglish-api/swagger-json target=\"_blank\">click here</a><br/><br/>github: <a href=\"https://github.com/ahyeon-jung/renglish\" target=\"_blank\">ahyeon-jung/renglish</a><br/>contact: ahyeon.aisha@gmail.com
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateUserDto
 */
export interface CreateUserDto {
    /**
     * 소셜 로그인 플랫폼
     * @type {string}
     * @memberof CreateUserDto
     */
    provider: string;
    /**
     * 사용자의 이메일 주소
     * @type {string}
     * @memberof CreateUserDto
     */
    email: string;
    /**
     * 사용자의 닉네임
     * @type {string}
     * @memberof CreateUserDto
     */
    nickname: string;
    /**
     * 알게된 경로
     * @type {string}
     * @memberof CreateUserDto
     */
    how: string;
    /**
     * 사용자의 비밀번호
     * @type {string}
     * @memberof CreateUserDto
     */
    password: string;
}

/**
 * Check if a given object implements the CreateUserDto interface.
 */
export function instanceOfCreateUserDto(value: object): value is CreateUserDto {
    if (!('provider' in value) || value['provider'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('nickname' in value) || value['nickname'] === undefined) return false;
    if (!('how' in value) || value['how'] === undefined) return false;
    if (!('password' in value) || value['password'] === undefined) return false;
    return true;
}

export function CreateUserDtoFromJSON(json: any): CreateUserDto {
    return CreateUserDtoFromJSONTyped(json, false);
}

export function CreateUserDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateUserDto {
    if (json == null) {
        return json;
    }
    return {
        
        'provider': json['provider'],
        'email': json['email'],
        'nickname': json['nickname'],
        'how': json['how'],
        'password': json['password'],
    };
}

export function CreateUserDtoToJSON(json: any): CreateUserDto {
    return CreateUserDtoToJSONTyped(json, false);
}

export function CreateUserDtoToJSONTyped(value?: CreateUserDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'provider': value['provider'],
        'email': value['email'],
        'nickname': value['nickname'],
        'how': value['how'],
        'password': value['password'],
    };
}

