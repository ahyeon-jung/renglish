/* tslint:disable */
/* eslint-disable */
/**
 * Renglish API Swagger
 * Download: <a href=/api-docs-ahyeon-renglish-api/swagger-json target=\"_blank\">click here</a><br/><br/>github: <a href=\"https://github.com/ahyeon-jung/renglish\" target=\"_blank\">ahyeon-jung/renglish</a><br/>contact: ahyeon.aisha@gmail.com
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateDialogueDto
 */
export interface CreateDialogueDto {
    /**
     * 영어 대사
     * @type {string}
     * @memberof CreateDialogueDto
     */
    englishScript: string;
    /**
     * 한국어 대사
     * @type {string}
     * @memberof CreateDialogueDto
     */
    koreanScript: string;
    /**
     * 
     * @type {number}
     * @memberof CreateDialogueDto
     */
    order: number;
}

/**
 * Check if a given object implements the CreateDialogueDto interface.
 */
export function instanceOfCreateDialogueDto(value: object): value is CreateDialogueDto {
    if (!('englishScript' in value) || value['englishScript'] === undefined) return false;
    if (!('koreanScript' in value) || value['koreanScript'] === undefined) return false;
    if (!('order' in value) || value['order'] === undefined) return false;
    return true;
}

export function CreateDialogueDtoFromJSON(json: any): CreateDialogueDto {
    return CreateDialogueDtoFromJSONTyped(json, false);
}

export function CreateDialogueDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateDialogueDto {
    if (json == null) {
        return json;
    }
    return {
        
        'englishScript': json['english_script'],
        'koreanScript': json['korean_script'],
        'order': json['order'],
    };
}

export function CreateDialogueDtoToJSON(json: any): CreateDialogueDto {
    return CreateDialogueDtoToJSONTyped(json, false);
}

export function CreateDialogueDtoToJSONTyped(value?: CreateDialogueDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'english_script': value['englishScript'],
        'korean_script': value['koreanScript'],
        'order': value['order'],
    };
}

